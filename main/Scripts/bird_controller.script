go.property("gravity", 25)
go.property("jump_impulse", vmath.vector3(0, 450, 0))

local STATE = { pre_game = 0, alive = 1, dead = 2 }
local start_position

local function reset(self)
	self.state = STATE.pre_game
	self.velocity = vmath.vector3(0, 0, 0)
	go.set_position(start_position)
	self.score = 0
	msg.post("/background#Score", "reset")
end

function init(self)
	msg.post(".", "acquire_input_focus")
	start_position = go.get_position()
	reset(self)
end

local function die(self)
	self.state = STATE.dead
	msg.post("/controller", "bird_died")
	msg.post("/background#Score", "view_score", {score = self.score})
end

function update(self, dt)
	local pos = go.get_position()
	if self.state ~= STATE.pre_game then
		self.velocity = self.velocity - vmath.vector3(0, self.gravity, 0)
		pos = pos + self.velocity * dt
		if pos.y <= 0 then
			die(self)
		end
	end
	if self.state == STATE.dead then
		if pos.y < 0 then
		pos.y = 0
		end
	end
	go.set_position(pos)
end

local function jump(self)
	self.velocity = self.jump_impulse
end

--seems ok to have all control handling in one place
--in such small game
function on_input(self, action_id, action)
	if action_id == hash("jump") and action.pressed  then
		if self.state == STATE.pre_game then
			self.state = STATE.alive
			msg.post("/controller", "game_started")
		elseif self.state == STATE.dead then
			msg.post("/controller", "restart_game")
			reset(self)
		end
		if self.state ~= STATE.dead and action.pressed then
			jump(self)
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("trigger_response") and message.enter then 
		if message.group == hash("score") then
			self.score = self.score + 1
			msg.post("/background#Score", "update_score", { score = self.score})
		else
			die(self)
		end
	end
end